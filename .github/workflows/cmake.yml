name: CMake

on:
    push:
        branches: [master, v1.3dev-add-cmake-system-redo]
    pull_request:
        branches: [master, v1.3dev-add-cmake-system-redo]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
    BUILD_TYPE: Release

jobs:
    build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [macos-latest, ubuntu-latest, windows-latest]
                python-version: ['3.6.15', '3.7.16', '3.8.16', '3.9.16', "3.10.11", "3.11.3"]
        # vtk (a dependency of mayavi) does not currently support python 3.10
        steps:
        -   uses: actions/checkout@v3

        -   name: Install Conan
            id: conan
            uses: turtlebrowser/get-conan@main
            with:
                version: 2.0.4

        -   name: Set up Python ${{ matrix.python-version }}
            uses: actions/setup-python@v4
            with:
                python-version: ${{ matrix.python-version }}
                architecture: 'x64'

        -   name: Install Python dependencies
            run: |
                python -m pip install --upgrade pip
                pip install -r docs/requirements.txt

        -   name: Check version
            run: cmake --version

        -   name: "CMake: configure"
      # We use bash so that the same syntax for environment variables can be across all operating systems
            shell: bash
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
            run: cmake -B build -S . -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}  -DPython_ROOT_DIR=${{env.pythonLocation}}

        -   name: "CMake: build"
      # Build your program with the given configuration
            run: cmake --build build --config ${{env.BUILD_TYPE}}

        -   name: "CMake: test"
            working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
            run: ctest -C ${{env.BUILD_TYPE}}
